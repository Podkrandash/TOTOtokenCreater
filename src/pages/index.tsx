import React from 'react';
import styled from 'styled-components';
import { Layout } from '@/components/Layout';
import { Button } from '@/components/Button';
import { Card } from '@/components/Card';
import { useRouter } from 'next/router';
import { useTonConnectUI } from '@tonconnect/ui-react';
import { PageHeader } from '@/components/PageHeader';

const Hero = styled.div`
  text-align: center;
  margin-bottom: ${({ theme }) => theme.space.xl};
  
  @media (max-width: 480px) {
    margin-bottom: ${({ theme }) => theme.space.lg};
  }
`;

const HeroTitle = styled.h1`
  font-size: min(48px, 10vw); // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
  margin-bottom: ${({ theme }) => theme.space.md};
  line-height: 1.2;
  
  span {
    color: ${({ theme }) => theme.colors.primary};
  }
  
  @media (max-width: 480px) {
    font-size: min(32px, 8vw);
    margin-bottom: ${({ theme }) => theme.space.sm};
  }
`;

const HeroSubtitle = styled.p`
  font-size: 18px;
  color: ${({ theme }) => theme.colors.textSecondary};
  max-width: 700px;
  margin: 0 auto ${({ theme }) => theme.space.lg};
  line-height: 1.5;
  
  @media (max-width: 480px) {
    font-size: 16px;
    margin-bottom: ${({ theme }) => theme.space.md};
  }
`;

const Features = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: ${({ theme }) => theme.space.md};
  margin-bottom: ${({ theme }) => theme.space.xl};
  
  @media (max-width: 480px) {
    grid-template-columns: 1fr;
    gap: ${({ theme }) => theme.space.sm};
    margin-bottom: ${({ theme }) => theme.space.lg};
  }
`;

const FeatureCard = styled(Card)`
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: ${({ theme }) => theme.space.lg};
  
  @media (max-width: 480px) {
    padding: ${({ theme }) => theme.space.md};
  }
`;

const FeatureIcon = styled.div`
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background-color: rgba(0, 136, 204, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: ${({ theme }) => theme.space.md};
  font-size: 24px;
  color: ${({ theme }) => theme.colors.primary};
  
  @media (max-width: 480px) {
    width: 48px;
    height: 48px;
    font-size: 20px;
    margin-bottom: ${({ theme }) => theme.space.sm};
  }
`;

const FeatureTitle = styled.h3`
  margin-bottom: ${({ theme }) => theme.space.sm};
  font-size: 20px;
  
  @media (max-width: 480px) {
    font-size: 18px;
  }
`;

const FeatureText = styled.p`
  color: ${({ theme }) => theme.colors.textSecondary};
  line-height: 1.5;
  font-size: 16px;
  
  @media (max-width: 480px) {
    font-size: 14px;
  }
`;

const CTA = styled.div`
  text-align: center;
  margin-top: ${({ theme }) => theme.space.xl};
  
  @media (max-width: 480px) {
    margin-top: ${({ theme }) => theme.space.lg};
  }
`;

const ButtonGroup = styled.div`
  display: flex;
  gap: ${({ theme }) => theme.space.md};
  justify-content: center;
  margin-top: ${({ theme }) => theme.space.lg};
  
  @media (max-width: 600px) {
    flex-direction: column;
    align-items: center;
    gap: ${({ theme }) => theme.space.sm};
    margin-top: ${({ theme }) => theme.space.md};
  }
`;

const ExchangeContainer = styled.div`
  width: 100%;
  display: flex;
  flex-direction: column;
`;

const ExchangeHeader = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between; // –î–ª—è –±—É–¥—É—â–µ–π –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
  margin-bottom: ${({ theme }) => theme.space.lg};
  // –°—Ç–∏–ª–∏ –¥–ª—è —Ç–∞–±–æ–≤ (New, Listings, Hot, Bluming) –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
  // –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ –≤–ª–æ–∂–µ–Ω–Ω—ã–π styled component
`;

const TabContainer = styled.div`
  display: flex;
  gap: ${({ theme }) => theme.space.sm};
  align-items: center;
`;

const TabButton = styled.button<{$active?: boolean}>`
  padding: ${({ theme }) => `${theme.space.xs} ${theme.space.md}`};
  font-size: 16px;
  font-weight: 500;
  color: ${({ theme, $active }) => $active ? theme.colors.primary : theme.colors.textSecondary};
  background-color: transparent;
  border: none;
  border-bottom: 2px solid ${({ theme, $active }) => $active ? theme.colors.primary : 'transparent'};
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    color: ${({ theme }) => theme.colors.primary};
  }
`;

const SearchIconPlaceholder = styled.div` // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –ø–æ–∏—Å–∫–∞
  width: 24px;
  height: 24px;
  color: ${({ theme }) => theme.colors.textSecondary};
  // –ó–¥–µ—Å—å –±—É–¥–µ—Ç SVG
  display: flex; align-items: center; justify-content:center;
  font-size: 20px;
`;

const TokenList = styled.div`
  display: flex;
  flex-direction: column;
  gap: ${({ theme }) => theme.space.sm};
`;

const TokenRow = styled.div`
  display: flex;
  align-items: center;
  padding: ${({ theme }) => theme.space.sm} 0; // –û—Ç—Å—Ç—É–ø—ã —Ç–æ–ª—å–∫–æ —Å–≤–µ—Ä—Ö—É/—Å–Ω–∏–∑—É
  // background-color: ${({ theme }) => theme.colors.background}; // –ù–µ–º–Ω–æ–≥–æ –¥—Ä—É–≥–æ–π —Ñ–æ–Ω –¥–ª—è —Å—Ç—Ä–æ–∫–∏
  border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};
  cursor: pointer;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: ${({ theme }) => theme.colors.backgroundGlass};
  }

  &:last-child {
    border-bottom: none;
  }
`;

const TokenIcon = styled.img`
  width: 40px;
  height: 40px;
  border-radius: 50%;
  margin-right: ${({ theme }) => theme.space.md};
  background-color: ${({ theme }) => theme.colors.border}; // Placeholder color
`;

const TokenNameAndStats = styled.div`
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 2px;
`;

const TokenName = styled.span`
  font-size: 16px;
  font-weight: 500;
  color: ${({ theme }) => theme.colors.text};
`;

const TokenStats = styled.span`
  font-size: 12px;
  color: ${({ theme }) => theme.colors.textSecondary};
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∏–∫–æ–Ω–∫–∏ –∏ —Ü–∏—Ñ—Ä—ã –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
`;

const TokenMarketCapAndTime = styled.div`
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 2px;
`;

const TokenMarketCap = styled.span`
  font-size: 14px;
  font-weight: 500;
  color: #4CAF50; // –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è MK
`;

const TokenTime = styled.span`
  font-size: 12px;
  color: ${({ theme }) => theme.colors.textSecondary};
  // –ò–∫–æ–Ω–∫–∞ "–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ" –∏–ª–∏ –≤—Ä–µ–º—è
`;

// –ó–∞–≥–ª—É—à–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–∏—Ä–∂–∏
const dummyTokens = [
  { iconUrl: 'https://placekitten.com/40/40', name: 'EAT', stats: 'üëÅ 0  üí¨ 2', marketCap: '$1.5K', time: 'üö´ 48—Å' },
  { iconUrl: 'https://placekitten.com/41/41', name: 'WOLFTON', stats: 'üëÅ 11  üí¨ 25', marketCap: '$4.5K', time: '‚è± 3–º–∏–Ω' },
  { iconUrl: 'https://placekitten.com/42/42', name: 'TRILO333', stats: 'üëÅ 7  üí¨ 13', marketCap: '$1.5K', time: 'üö´ 10–º–∏–Ω' },
  { iconUrl: 'https://placekitten.com/43/43', name: 'DUK', stats: 'üëÅ 3  üí¨ 6', marketCap: '$1.5K', time: 'üö´ 14–º–∏–Ω' },
  { iconUrl: 'https://placekitten.com/44/44', name: 'TYL', stats: 'üëÅ 2  üí¨ 5', marketCap: '$1.4K', time: 'üö´ 14–º–∏–Ω' },
  { iconUrl: 'https://placekitten.com/45/45', name: 'AG', stats: 'üëÅ 4  üí¨ 8', marketCap: '$1.4K', time: 'üö´ 16–º–∏–Ω' },
  { iconUrl: 'https://placekitten.com/46/46', name: 'HFD', stats: 'üëÅ 1  üí¨ 7', marketCap: '$1.4K', time: 'üö´ 16–º–∏–Ω' },
  { iconUrl: 'https://placekitten.com/47/47', name: 'VCR', stats: 'üëÅ 0  üí¨ 1', marketCap: '$0', time: 'üö´ 17–º–∏–Ω' },
];

const renderExchangeView = (router: any) => {
  const [activeTab, setActiveTab] = React.useState('New');
  return (
    <ExchangeContainer>
      <ExchangeHeader>
        <TabContainer>
          <TabButton $active={activeTab === 'New'} onClick={() => setActiveTab('New')}>New</TabButton>
          <TabButton $active={activeTab === 'Listings'} onClick={() => setActiveTab('Listings')}>Listings</TabButton>
          <TabButton $active={activeTab === 'Hot'} onClick={() => setActiveTab('Hot')}>Hot</TabButton>
          <TabButton $active={activeTab === 'Bluming'} onClick={() => setActiveTab('Bluming')}>Bluming</TabButton>
        </TabContainer>
        <SearchIconPlaceholder>üîç</SearchIconPlaceholder> 
      </ExchangeHeader>
      <TokenList>
        {dummyTokens.map((token, index) => (
          <TokenRow key={index} onClick={() => alert(`–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ç–æ–∫–µ–Ω—É ${token.name} (–Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)`)}>
            <TokenIcon src={token.iconUrl} alt={token.name} />
            <TokenNameAndStats>
              <TokenName>{token.name}</TokenName>
              <TokenStats>{token.stats}</TokenStats>
            </TokenNameAndStats>
            <TokenMarketCapAndTime>
              <TokenMarketCap>{token.marketCap}</TokenMarketCap>
              <TokenTime>{token.time}</TokenTime>
            </TokenMarketCapAndTime>
          </TokenRow>
        ))}
      </TokenList>
    </ExchangeContainer>
  );
}

export default function Home() {
  const router = useRouter();
  const [tonConnectUI] = useTonConnectUI();
  
  const oldFeatures = [
    {
      icon: 'üöÄ',
      title: '–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ',
      text: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ç–æ–∫–µ–Ω—ã Jetton –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ TON –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∏–∫–æ–≤ –±–µ–∑ –Ω–∞–≤—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.'
    },
    {
      icon: 'üîí',
      title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      text: '–í—Å–µ —Ç–æ–∫–µ–Ω—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –≤ –±–ª–æ–∫—á–µ–π–Ω–µ TON. –ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –≤–∞—à–∏ –∫–ª—é—á–∏ –∏–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞.'
    },
    {
      icon: '‚öôÔ∏è',
      title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
      text: '–ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤–∞—à–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞, –≤—ã–ø—É—Å–∫, —Å–∂–∏–≥–∞–Ω–∏–µ, –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.'
    },
  ];
  
  const handleConnect = async () => {
    if (tonConnectUI) {
      await tonConnectUI.connectWallet();
    }
  };
  
  const isWalletConnected = tonConnectUI && tonConnectUI.wallet;
  
  return (
    <Layout>
      <PageHeader title={isWalletConnected ? "Meme Exchange" : "–ì–ª–∞–≤–Ω–∞—è"} />
      {isWalletConnected ? (
        renderExchangeView(router)
      ) : (
        <>
          <Hero>
            <HeroTitle>
              –°–æ–∑–¥–∞–≤–∞–π—Ç–µ <span>Jetton —Ç–æ–∫–µ–Ω—ã</span> –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ TON
            </HeroTitle>
            <HeroSubtitle>
              TOTO Trade - –ø—Ä–æ—Å—Ç–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Jetton —Ç–æ–∫–µ–Ω–∞–º–∏ –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ TON.
              –ù–∏–∫–∞–∫–æ–≥–æ –∫–æ–¥–∞, —Ç–æ–ª—å–∫–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–æ–≤.
            </HeroSubtitle>
            <ButtonGroup>
                <Button size="large" onClick={handleConnect}>
                  –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
                </Button>
              <Button size="large" variant="outline" onClick={() => router.push('/manage')}>
                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏
              </Button>
            </ButtonGroup>
          </Hero>
          
          <Features>
            {oldFeatures.map((feature, index) => (
              <FeatureCard key={index}>
                <FeatureIcon>{feature.icon}</FeatureIcon>
                <FeatureTitle>{feature.title}</FeatureTitle>
                <FeatureText>{feature.text}</FeatureText>
              </FeatureCard>
            ))}
          </Features>
          
          <CTA>
            <HeroTitle>
              –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?
            </HeroTitle>
            <HeroSubtitle>
              –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —Å–≤–æ–π TON –∫–æ—à–µ–ª–µ–∫ –∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —Ç–æ–∫–µ–Ω –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!
            </HeroSubtitle>
            <Button size="large" onClick={handleConnect}>
              –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
            </Button>
          </CTA>
        </>
      )}
    </Layout>
  );
} 